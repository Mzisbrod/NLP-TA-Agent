#!/usr/bin/python
from trigram_model import get_ngrams, corpus_reader, essay_scoring_experiment, TrigramModel

print("Part 1:\n")
print("get_ngrams([\"natural\",\"language\",\"processing\"],1)")
print("Answer Key: " + str([('START',), ('natural',), ('language',), ('processing',), ('STOP',)]))
print("Student Answer: " + str(get_ngrams(["natural","language","processing"],1)))
print("\n\nget_ngrams([\"natural\",\"language\",\"processing\"],2)")
print("Answer Key: " + str([('START', 'natural'), ('natural', 'language'), ('language', 'processing'), ('processing', 'STOP')]))
print("Student Answer: " + str(get_ngrams(["natural","language","processing"],2)))
print("\n\nget_ngrams([\"natural\",\"language\",\"processing\"],3)")
print("Answer Key: " + str([('START', 'START', 'natural'), ('START', 'natural', 'language'), ('natural', 'language', 'processing'), ('language', 'processing', 'STOP')]))
print("Student Answer: " + str(get_ngrams(["natural","language","processing"],3)))
print("\n\n\n")

model =  TrigramModel('brown_train.txt')
print("Part 2:\n")
print("model.trigramcounts[('START','START','the')]")
print("Answer Key: " + str(5478))
print("Student Answer: " + str(model.trigramcounts[('START','START','the')]))
print("\n\nmodel.bigramcounts[('START','the')]")
print("Answer Key: " + str(5478))
print("Student Answer: " + str(model.bigramcounts[('START','the')]))
print("\n\nmodel.unigramcounts[('the',)]")
print("Answer Key: " + str(61428))
print("Student Answer: " + str(model.unigramcounts[('the',)]))
print("\n\n\n")

print("Part 3:\n")
print("model.raw_trigram_probability((\'START\', \'the\', \'only\'))")
print("Answer Key: " + str(0.008032128514056224))
print("Student Answer: " + str(model.raw_trigram_probability(('START', 'the', 'only'))))
print("\n\nmodel.raw_bigram_probability((\'START\', \'the\'))")
print("Answer Key: " + str(0.13163839092613064))
print("Student Answer: " + str(model.raw_bigram_probability(('START', 'the'))))
print("\n\nmodel.raw_unigram_probability((\'START\',))")
print("Answer Key: " + str(0))
print("Student Answer: " + str(model.raw_unigram_probability(('START',))))
print("\n\nmodel.raw_unigram_probability((\'the\',))")
print("Answer Key: " + str(0.058920067333931216))
print("Student Answer: " + str(model.raw_unigram_probability(('the',))))
print("\n\n\n")


print("Part 4:\n")
print("\n\nmodel.smoothed_trigram_probability((\'START\', \'the\', \'only\'))")
print("Answer Key: " + str(0.0043322459342445795))
print("Student Answer: " + str(model.smoothed_trigram_probability(('START','the','only'))))
print("\n\nmodel.smoothed_trigram_probability((\'START\', \'the\', \'best\'))")
print("Answer Key: " + str(0.0017732719273906405))
print("Student Answer: " + str(model.smoothed_trigram_probability(('START','the','best'))))
print("\n\n\n")

print("Part 5:\n")
print("\n\nmodel.sentence_logprob([\"i\",\"love\",\"the\",\"sky\"])")
print("Answer Key: " + str(-38.4005698127621))
print("Student Answer: " + str(model.sentence_logprob(["i","love","the","sky"])))
print("\n\nmodel.sentence_logprob([\"the\",\"best\",\"way\",\"to\",\"go\"])")
print("Answer Key: " + str(-33.12863827422003))
print("Student Answer: " + str(model.sentence_logprob(["the","best","way","to","go"])))
print("\n\nmodel.sentence_logprob([\"start\",\"the\"])")
print("Answer Key: " + str(-22.320672105724313))
print("Student Answer: " + str(model.sentence_logprob(["start","the"])))
print("\n\n\n")

print("Part 6:\n")
print("\n\nmodel.perplexity(corpus_reader('brown_test.txt', model.lexicon))")
print("Answer Key: " + str(222.45603449068247))
print("Student Answer: " + str(model.perplexity(corpus_reader('brown_test.txt', model.lexicon))))
print("\n\nmodel.perplexity(corpus_reader('brown_train.txt', model.lexicon))")
print("Answer Key: " + str(16.091318233161303))
print("Student Answer: " + str(model.perplexity(corpus_reader('brown_train.txt', model.lexicon))))
print("\n\n\n")

print("Part 7:\n")
train_high = "train_high.txt"
train_low  = "train_low.txt"
test_high  = "test_high"
test_low   = "test_low"
print("essay_scoring_experiment('train_high.txt', 'train_low.txt', 'test_high', 'test_low')")
print("Answer Key: " + str(0.850597609561753))
print("Student Answer: " + str(essay_scoring_experiment(train_high, train_low, test_high, test_low)))
print("\n\n\n")
